apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: patient-ms
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  # storageClassName: standard-rwo  # uncomment if you want to pin the SC

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
  namespace: patient-ms
data:
  01-create-dbs.sql: |
    -- Runs only on a BRAND NEW (empty) data directory
    CREATE DATABASE patientdb OWNER pm_user;

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: patient-ms
  labels:
    app: postgres
spec:
  replicas: 1
  strategy:
    type: Recreate                       # <<< MODIFIED: avoid rolling update on RWO PVC
  progressDeadlineSeconds: 1200
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 30   # <<< MODIFIED: cleaner shutdown
      # Fix common PVC permission issues before Postgres starts
      initContainers:                     # <<< MODIFIED
        - name: fix-perms
          image: busybox:1.36
          command: ["sh","-c","chown -R 999:999 /var/lib/postgresql/data || true"]
          securityContext: { runAsUser: 0 }
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: pm_user
            - name: POSTGRES_PASSWORD
              value: pm_pass
            - name: POSTGRES_DB
              value: authdb
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
          # Accurate readiness (only Ready when accepting connections)
          readinessProbe:
            exec:
              command: ["sh","-c","pg_isready -U pm_user -d authdb -h 127.0.0.1 -p 5432"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 24
          # Simple liveness (donâ€™t be too aggressive)
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: initdb
          configMap:
            name: postgres-initdb
            defaultMode: 0775

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: patient-ms
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
