apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: patient-ms
type: Opaque
stringData:
  POSTGRES_USER: pm_user
  POSTGRES_PASSWORD: pm_pass
  POSTGRES_DB: authdb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: patient-ms
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
  namespace: patient-ms
data:
  01-create-dbs.sql: |
    -- Runs only on a BRAND NEW (empty) data directory
    -- Create the extra database your services need
    CREATE DATABASE patientdb OWNER pm_user;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: patient-ms
  labels:
    app: postgres
spec:
  replicas: 1
  # Avoid PVC contention during updates
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secret
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: initdb
          configMap:
            name: postgres-initdb
            defaultMode: 0775
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: patient-ms
spec:
  selector:
    app: postgres
  ports:
    - name: db
      port: 5432
      targetPort: 5432
